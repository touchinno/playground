{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["Dashboard","props","_this","Object","_home_runner_work_playground_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_runner_work_playground_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_runner_work_playground_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleWindowSizeChange","setState","width","window","innerWidth","loading","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","state","collapse","interval","undefined","iframe","refresh","bind","_home_runner_work_playground_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","addEventListener","removeEventListener","clearInterval","e","_this2","console","debug","setInterval","refreshSignal","_this3","_this$state","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","type","color","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_14__","htmlParse","replace","domNode","name","attribs","Component"],"mappings":"qQAKMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA0BRQ,uBAAyB,WACvBP,EAAKQ,SAAS,CAAEC,MAAOC,OAAOC,cA5BbX,EAmDnBY,QAAU,kBAAMC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAf,eAhDdhB,EAAKiB,MAAQ,CACXC,UAAU,EACVC,cAAUC,EAEVC,OAAQ,oGAERZ,MAAOC,OAAOC,YAGhBX,EAAKsB,QAAUtB,EAAKsB,QAAQC,KAAbtB,OAAAuB,EAAA,EAAAvB,QAAAuB,EAAA,EAAAvB,CAAAD,KAZEA,oFAgBjBU,OAAOe,iBAAiB,SAAUtB,KAAKI,uEAIvCG,OAAOgB,oBAAoB,SAAUvB,KAAKI,wBADrB,IAEbY,EAAahB,KAAKc,MAAlBE,SACJA,GACFQ,cAAcR,gFAWVS,GAAG,IAAAC,EAAA1B,KACHgB,EAAahB,KAAKc,MAAlBE,SAENW,QAAQC,MAAM,UAAWH,GAErBT,GACFQ,cAAcR,GACdA,OAAWC,GAEXD,EAAWa,YAAY,WACrBH,EAAKI,iBACJ,KAGL9B,KAAKK,SAAS,CAACW,SAAUA,qCAKlB,IAAAe,EAAA/B,KAAAgC,EACsBhC,KAAKc,MAA1BE,EADDgB,EACChB,SAAUE,EADXc,EACWd,OAElB,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAuBH,EAAAC,EAAAC,cAAA,iCADtC,IACuEF,EAAAC,EAAAC,cAAA,qBACrEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,gBAAgBC,QAAU,SAACf,GAAQM,EAAKZ,QAAQM,KACzET,EACCN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGjBH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQE,MAAM,QAAQC,QAAU,WAAQT,EAAK1B,SAAS,CAAEU,UAAWgB,EAAKjB,MAAMC,aAAiBL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAC5GH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOF,MAAM,WAAb,YAGJ7B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,OAAQ3C,KAAKc,MAAMC,UAC7BL,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACG1B,GACDR,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KAEIW,IAAU3B,EAAQ,CAChB4B,QAAS,SAAAC,GACc,WAAjBA,EAAQC,OACVD,EAAQE,QAAQ3C,MAAQ,0BApF5B4C,aAsGTvD","file":"static/js/15.5edab331.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Badge, Button, Card, CardBody, CardHeader, Col, Collapse, Row,} from 'reactstrap';\nimport htmlParse from 'html-react-parser';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: true,\n      interval: undefined,\n\n      iframe: '<iframe src=\"https://www.merriam-webster.com/word-of-the-day\" height=\"1024\" width=\"800\"></iframe>',\n\n      width: window.innerWidth,\n    };\n\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n    const { interval } = this.state;\n    if (interval) {\n      clearInterval(interval);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n\n  componentDidMount() {\n  }\n\n  refresh(e) {\n    let { interval } = this.state;\n\n    console.debug('refresh', e);\n\n    if (interval) {\n      clearInterval(interval);\n      interval = undefined;\n    } else {\n      interval = setInterval(() => {\n        this.refreshSignal();\n      }, 5000);\n    }\n\n    this.setState({interval: interval});\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n    const { interval, iframe } = this.state;\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"/><strong>Word of The Day</strong> <small>word</small>\n                <div className=\"card-header-actions\">\n                  <Button type=\"button\" color=\"ghost-warning\" onClick={ (e) => { this.refresh(e); } }>\n                    {interval ?\n                      <i className=\"icon-control-pause\"/> :\n                      <i className=\"icon-control-play\"/>\n                    }\n                  </Button>\n                  <Button color=\"light\" onClick={ () => { this.setState({ collapse: !this.state.collapse }); } }><i className=\"icon-arrow-up\"/></Button>\n                  <Badge color=\"warning\">Signal</Badge>\n                </div>\n              </CardHeader>\n              <Collapse isOpen={this.state.collapse}>\n              <CardBody>\n                {iframe &&\n                <Row>\n                  <Col>\n                    {\n                      htmlParse(iframe, {\n                        replace: domNode => {\n                          if (domNode.name === 'iframe') {\n                            domNode.attribs.width = \"100%\";\n                          }\n                        }\n                      })\n                    }\n                  </Col>\n                </Row>\n                }\n              </CardBody>\n              </Collapse>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}